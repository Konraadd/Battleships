@{
    ViewData["Title"] = "Home Page";
}

@model Battleships.Services.BattleshipGameManager

<style>
    .battleship-board {
        border-spacing: 0;
        border-collapse: collapse;
    }

        .battleship-board th {
            padding: .5em;
        }

        .battleship-board td {
            border: 3px solid;
            width: 2em;
            height: 2em;
        }

    .field {
        background: #eee;
    }

    .battleship-field {
        background: #2653d0
    }

    .board-hit {
        background: #00ff21
    }

    .board-miss {
        background: #ff0000
    }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script type="text/javascript">

    function nextRound() {
        $.get("@Url.Action("NextRound", "Home", null, Context.Request.Scheme)", function (data, status) {
            changeGameState(data);
        });
    }

    function changeGameState(data) {
        let gameRoundResult = JSON.parse(data);
        let roundResult1 = gameRoundResult.PlayerRoundResult1;
        let roundResult2 = gameRoundResult.PlayerRoundResult2;
        changeShootingBoardField(1, roundResult1.IsHit, roundResult1.Coordinates.X, roundResult1.Coordinates.Y);
        changeShootingBoardField(2, roundResult2.IsHit, roundResult2.Coordinates.X, roundResult2.Coordinates.Y);

        let whoWon = gameRoundResult.WhoWon;
        if (whoWon != null) {
            setTimeout(function () { alert("Player " + whoWon + " won!"); }, 500);
        }
    }

    function changeShootingBoardField(boardNumber, isHit, x, y) {
        let element = document.getElementById("ShootingBoard" + boardNumber + "_" + x + "_" + y);
        if (isHit) {
            element.classList.add("board-hit");
        }
        else
        {
            element.classList.add("board-miss");
        }
    }

</script>


<div class="text-center">
    <h1 class="display-4">BATTLESHIPS</h1>
</div>
<div style="display:flex; justify-content:center">
    <div style="display: flex; flex-direction: column; padding: 2em; margin: 2em; border: dashed green;">
        <h3 style="text-align:center">BOT 1</h3>
        <p style="text-align:center"> SHIPS BOARD</p>
        <table class="battleship-board">
            @{List<char> characters = new List<char>() { ' ', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J' };
            }
            <tbody>
                <tr>
                    @for (int i = 0; i <= 10; i++)
                    {
                        <th>@characters.ElementAt(i)</th>
                    }
                </tr>
                @for (int i = 0; i < 10; i++)
                {
                    <tr>
                        <th>@(i + 1)</th>
                        @for (int j = 0; j < 10; j++)
                        {
                            if (Model.Bot1.battleshipBoard.occupiedFields.Contains(new Battleships.Services.Coordinates(i, j)))
                            {
                                <td class="battleship-field"></td>
                            }
                            else
                            {
                                <td class="field"></td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
        <br />
        <p style="text-align:center"> SHOOTING BOARD</p>
        <table class="battleship-board">
            <tbody>
                <tr>
                    @for (int i = 0; i <= 10; i++)
                    {
                        <th>@characters.ElementAt(i)</th>
                    }
                </tr>
                @for (int i = 0; i < 10; i++)
                {
                    <tr>
                        <th>@(i + 1)</th>
                        @for (int j = 0; j < 10; j++)
                        {
                            <td id=@String.Format("ShootingBoard1_{0}_{1}", i,j)></td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div style="display:flex; flex-direction:column; padding:2em; margin: 2em; border: dashed red">
        <h3 style="text-align:center">BOT 2</h3>
        <p style="text-align:center">SHIPS BOARD</p>
        <table class="battleship-board">
            <tbody>
                <tr>
                    @for (int i = 0; i <= 10; i++)
                    {
                        <th>@characters.ElementAt(i)</th>
                    }
                </tr>
                @for (int i = 0; i < 10; i++)
                {
                    <tr>
                        <th>@(i + 1)</th>
                        @for (int j = 0; j < 10; j++)
                        {
                            if (Model.Bot2.battleshipBoard.occupiedFields.Contains(new Battleships.Services.Coordinates(i, j)))
                            {
                                <td class="battleship-field"></td>
                            }
                            else
                            {
                                <td class="field"></td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
        <br />
        <p style="text-align:center"> SHOOTING BOARD</p>
        <table class="battleship-board">
            <tbody>
                <tr>
                    @for (int i = 0; i <= 10; i++)
                    {
                        <th>@characters.ElementAt(i)</th>
                    }
                </tr>
                @for (int i = 0; i < 10; i++)
                {
                    <tr>
                        <th>@(i + 1)</th>
                        @for (int j = 0; j < 10; j++)
                        {
                            <td id=@String.Format("ShootingBoard2_{0}_{1}", i,j)></td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div style="display:flex; padding-top: 2em; justify-content:center">
    <button onclick="nextRound()" style="width:200px; height:60">NEXT ROUND</button>
</div>
